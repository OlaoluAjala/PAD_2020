version = 4.2

//
// Saved by sw version: 2020.1
// Save timestamp: 27-Apr-2020 @ 05:50:11 AM
//

model "test" {
    configuration {
        hil_device = "HIL603"
        hil_configuration_id = 1
        simulation_method = exact
        simulation_time_step = auto
        simulation_discret_scaling = 1.0
        dsp_timer_periods = 100e-6, 50e-3
        ss_calc_method = "systematic elimination"
        enb_pole_shift = True
        enb_gds_oversampling = True
        show_modes = False
        device_ao_limit_enable = True
        cpl_stb = False
        enb_dep_sw_detect = False
        code_section = "internal memory"
        data_section = "internal memory"
        sys_sp_rate_1 = 0.0001
        sys_sp_rate_2 = 0.05
        sys_real_type_precision = "default"
        user_real_type_precision = "default"
        sys_cpu_optimization = "high"
        user_cpu_optimization = "high"
    }

    component Subsystem Root {
        component src_scada_input freq_error2 {
            def_value = "1.2"
            unit = ""
        }
        [
            position = 10704, 8536
            scale = -1, 1
        ]

        component src_scada_input volt_error2 {
            unit = ""
        }
        [
            position = 10704, 8592
            scale = -1, 1
        ]

        component gen_probe u_Q2 {
        }
        [
            position = 10040, 8560
            scale = -1, 1
        ]

        component gen_probe u_P2 {
        }
        [
            position = 10040, 8640
            scale = -1, 1
        ]

        component src_scada_input freq_error1 {
            def_value = "1.1"
            unit = ""
        }
        [
            position = 10672, 8288
            scale = -1, 1
        ]

        component src_scada_input volt_error1 {
            unit = ""
        }
        [
            position = 10672, 8224
            scale = -1, 1
        ]

        component gen_probe u_Q1 {
        }
        [
            position = 10032, 8368
            scale = -1, 1
        ]

        component gen_probe u_P1 {
        }
        [
            position = 10032, 8448
            scale = -1, 1
        ]

        component src_scada_input freq_error3 {
            def_value = "1.3"
            unit = ""
        }
        [
            position = 10640, 8832
            scale = -1, 1
        ]

        component gen_probe u_P3 {
        }
        [
            position = 10040, 8864
            scale = -1, 1
        ]

        component src_scada_input volt_error3 {
            unit = ""
        }
        [
            position = 10648, 8888
            scale = -1, 1
        ]

        component gen_probe u_Q3 {
        }
        [
            position = 10040, 8784
            scale = -1, 1
        ]

        component src_scada_input q_level1 {
            def_value = "1.1"
            unit = ""
        }
        [
            position = 10688, 8416
            scale = -1, 1
        ]

        component src_scada_input flow_flag1 {
            unit = ""
        }
        [
            position = 10688, 8352
            scale = -1, 1
        ]

        component src_scada_input q_level2 {
            def_value = "1.1"
            unit = ""
        }
        [
            position = 10696, 8696
            scale = -1, 1
        ]

        component src_scada_input flow_flag2 {
            unit = ""
        }
        [
            position = 10696, 8648
            scale = -1, 1
        ]

        component src_scada_input q_level3 {
            def_value = "1.1"
            unit = ""
        }
        [
            position = 10648, 9016
            scale = -1, 1
        ]

        component src_scada_input flow_flag3 {
            unit = ""
        }
        [
            position = 10648, 8952
            scale = -1, 1
        ]

        component Subsystem Modbus1 {
            layout = dynamic
            component src_constant C_u12 {
                execution_rate = "Ts"
            }
            [
                position = 7968, 7800
            ]

            component gen_product Product2 {
            }
            [
                position = 8912, 7816
            ]

            component gen_product Product1 {
            }
            [
                position = 7496, 7632
            ]

            component gen_c_function "C function1" {
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "in inherit"
                in_terminal_labels = "[(\'in\', True)]"
                in_terminal_properties = "int in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit;inherit"
                out_terminal_dimensions_str = "out inherit;sign inherit"
                out_terminal_labels = "[(\'out\', True), (\'sign\', True)]"
                out_terminal_properties = "int out;int sign;"
                output_fnc = "/*Begin code section*/
if (in >= 0)
{    
    out = in;
    sign=0;
}

else
{
    out = in*-1;
    sign = 1;
}
/*End code section*/"
            }
            [
                position = 7608, 7632
                hide_name = True
                size = 80, 48
            ]

            component src_constant Constant1 {
                execution_rate = "Ts"
                value = "scale_const"
            }
            [
                position = 7392, 7680
            ]

            component gen_bus_split "Bus Split1" {
                outputs = "12"
            }
            [
                position = 8384, 8160
            ]

            component gen_probe Probe2 {
            }
            [
                position = 8688, 7864
            ]

            component src_constant C_u11 {
                execution_rate = "Ts"
            }
            [
                position = 8008, 7720
            ]

            component gen_c_function "C function2" {
                in_terminal_dimensions = "inherit;inherit"
                in_terminal_dimensions_str = "sign inherit;in inherit"
                in_terminal_labels = "[(\'sign\', True), (\'in\', True)]"
                in_terminal_properties = "inherit sign;inherit in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit"
                out_terminal_dimensions_str = "out inherit"
                out_terminal_labels = "[(\'out\', True)]"
                output_fnc = "/*Begin code section*/
out = in*((-2*sign)+1);
/*End code section*/"
            }
            [
                position = 8584, 7760
                hide_name = True
                size = 48, 48
            ]

            component src_constant C_u13 {
                execution_rate = "Ts"
                value = "50"
            }
            [
                position = 7920, 7872
            ]

            component gen_terminator Termination1 {
            }
            [
                position = 8400, 7920
            ]

            component src_constant Constant2 {
                execution_rate = "Ts"
                value = "scale_back_const"
            }
            [
                position = 8792, 7840
            ]

            component "core/ModBus Device" "ModBus Device2 (config1)" {
                execution_rate = "Ts"
            }
            [
                position = 8192, 7992
                size = 184, 184
            ]

            component gen_probe Probe1_1 {
            }
            [
                position = 7664, 7552
            ]

            component gen_c_function "C function3" {
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "in inherit"
                in_terminal_labels = "[(\'in\', True)]"
                in_terminal_properties = "int in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit;inherit"
                out_terminal_dimensions_str = "out inherit;sign inherit"
                out_terminal_labels = "[(\'out\', True), (\'sign\', True)]"
                out_terminal_properties = "int out;int sign;"
                output_fnc = "/*Begin code section*/
if (in >= 0)
{    
    out = in;
    sign=0;
}

else
{
    out = in*-1;
    sign = 1;
}
/*End code section*/"
            }
            [
                position = 7608, 7800
                hide_name = True
                size = 80, 48
            ]

            component gen_probe Voltage_diff_1 {
            }
            [
                position = 7616, 7712
            ]

            component src_constant Constant3 {
                execution_rate = "Ts"
                value = "scale_const"
            }
            [
                position = 7392, 7848
            ]

            component gen_product Product3 {
            }
            [
                position = 7496, 7800
            ]

            component gen_bus_join "Bus Join2" {
                inputs = "24"
            }
            [
                position = 8032, 8632
            ]

            component gen_c_function "C function4" {
                in_terminal_dimensions = "inherit;inherit"
                in_terminal_dimensions_str = "sign inherit;in inherit"
                in_terminal_labels = "[(\'sign\', True), (\'in\', True)]"
                in_terminal_properties = "inherit sign;inherit in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit"
                out_terminal_dimensions_str = "out inherit"
                out_terminal_labels = "[(\'out\', True)]"
                output_fnc = "/*Begin code section*/
out = in*((-2*sign)+1);
/*End code section*/"
            }
            [
                position = 8584, 7904
                hide_name = True
                size = 48, 48
            ]

            component src_constant Constant4 {
                execution_rate = "Ts"
                value = "scale_back_const"
            }
            [
                position = 8792, 7984
            ]

            component gen_product Product4 {
            }
            [
                position = 8904, 7960
            ]

            component gen_probe Probe3 {
            }
            [
                position = 8680, 8008
            ]

            component gen_product Product5 {
            }
            [
                position = 7496, 7976
            ]

            component gen_c_function "C function5" {
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "in inherit"
                in_terminal_labels = "[(\'in\', True)]"
                in_terminal_properties = "int in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit;inherit"
                out_terminal_dimensions_str = "out inherit;sign inherit"
                out_terminal_labels = "[(\'out\', True), (\'sign\', True)]"
                out_terminal_properties = "int out;int sign;"
                output_fnc = "/*Begin code section*/
if (in >= 0)
{    
    out = in;
    sign=0;
}

else
{
    out = in*-1;
    sign = 1;
}
/*End code section*/"
            }
            [
                position = 7608, 7976
                hide_name = True
                size = 80, 48
            ]

            component src_constant Constant5 {
                execution_rate = "Ts"
                value = "scale_const"
            }
            [
                position = 7392, 8024
            ]

            component gen_probe flow_1 {
            }
            [
                position = 7664, 7896
            ]

            component gen_c_function "C function6" {
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "in inherit"
                in_terminal_labels = "[(\'in\', True)]"
                in_terminal_properties = "int in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit;inherit"
                out_terminal_dimensions_str = "out inherit;sign inherit"
                out_terminal_labels = "[(\'out\', True), (\'sign\', True)]"
                out_terminal_properties = "int out;int sign;"
                output_fnc = "/*Begin code section*/
if (in >= 0)
{    
    out = in;
    sign=0;
}

else
{
    out = in*-1;
    sign = 1;
}
/*End code section*/"
            }
            [
                position = 7608, 8144
                hide_name = True
                size = 80, 48
            ]

            component gen_probe Q_level_1 {
            }
            [
                position = 7616, 8056
            ]

            component src_constant Constant6 {
                execution_rate = "Ts"
                value = "scale_const"
            }
            [
                position = 7392, 8168
            ]

            component gen_product Product6 {
            }
            [
                position = 7496, 8144
            ]

            component gen_product Product7 {
            }
            [
                position = 7344, 8336
            ]

            component gen_c_function "C function7" {
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "in inherit"
                in_terminal_labels = "[(\'in\', True)]"
                in_terminal_properties = "int in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit;inherit"
                out_terminal_dimensions_str = "out inherit;sign inherit"
                out_terminal_labels = "[(\'out\', True), (\'sign\', True)]"
                out_terminal_properties = "int out;int sign;"
                output_fnc = "/*Begin code section*/
if (in >= 0)
{    
    out = in;
    sign=0;
}

else
{
    out = in*-1;
    sign = 1;
}
/*End code section*/"
            }
            [
                position = 7456, 8336
                hide_name = True
                size = 80, 48
            ]

            component src_constant Constant7 {
                execution_rate = "Ts"
                value = "scale_const"
            }
            [
                position = 7240, 8384
            ]

            component gen_probe Probe1_2 {
            }
            [
                position = 7512, 8256
            ]

            component gen_c_function "C function8" {
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "in inherit"
                in_terminal_labels = "[(\'in\', True)]"
                in_terminal_properties = "int in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit;inherit"
                out_terminal_dimensions_str = "out inherit;sign inherit"
                out_terminal_labels = "[(\'out\', True), (\'sign\', True)]"
                out_terminal_properties = "int out;int sign;"
                output_fnc = "/*Begin code section*/
if (in >= 0)
{    
    out = in;
    sign=0;
}

else
{
    out = in*-1;
    sign = 1;
}
/*End code section*/"
            }
            [
                position = 7456, 8504
                hide_name = True
                size = 80, 48
            ]

            component gen_probe Voltage_diff_2 {
            }
            [
                position = 7464, 8416
            ]

            component src_constant Constant8 {
                execution_rate = "Ts"
                value = "scale_const"
            }
            [
                position = 7240, 8552
            ]

            component gen_product Product8 {
            }
            [
                position = 7344, 8504
            ]

            component gen_product Product9 {
            }
            [
                position = 7344, 8680
            ]

            component gen_c_function "C function9" {
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "in inherit"
                in_terminal_labels = "[(\'in\', True)]"
                in_terminal_properties = "int in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit;inherit"
                out_terminal_dimensions_str = "out inherit;sign inherit"
                out_terminal_labels = "[(\'out\', True), (\'sign\', True)]"
                out_terminal_properties = "int out;int sign;"
                output_fnc = "/*Begin code section*/
if (in >= 0)
{    
    out = in;
    sign=0;
}

else
{
    out = in*-1;
    sign = 1;
}
/*End code section*/"
            }
            [
                position = 7456, 8680
                hide_name = True
                size = 80, 48
            ]

            component src_constant Constant9 {
                execution_rate = "Ts"
                value = "scale_const"
            }
            [
                position = 7240, 8728
            ]

            component gen_probe flow_2 {
            }
            [
                position = 7512, 8600
            ]

            component gen_c_function "C function10" {
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "in inherit"
                in_terminal_labels = "[(\'in\', True)]"
                in_terminal_properties = "int in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit;inherit"
                out_terminal_dimensions_str = "out inherit;sign inherit"
                out_terminal_labels = "[(\'out\', True), (\'sign\', True)]"
                out_terminal_properties = "int out;int sign;"
                output_fnc = "/*Begin code section*/
if (in >= 0)
{    
    out = in;
    sign=0;
}

else
{
    out = in*-1;
    sign = 1;
}
/*End code section*/"
            }
            [
                position = 7456, 8848
                hide_name = True
                size = 80, 48
            ]

            component gen_probe Q_level_2 {
            }
            [
                position = 7464, 8760
            ]

            component src_constant Constant10 {
                execution_rate = "Ts"
                value = "scale_const"
            }
            [
                position = 7240, 8896
            ]

            component gen_product Product10 {
            }
            [
                position = 7344, 8848
            ]

            component gen_product Product11 {
            }
            [
                position = 7424, 9032
            ]

            component gen_c_function "C function11" {
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "in inherit"
                in_terminal_labels = "[(\'in\', True)]"
                in_terminal_properties = "int in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit;inherit"
                out_terminal_dimensions_str = "out inherit;sign inherit"
                out_terminal_labels = "[(\'out\', True), (\'sign\', True)]"
                out_terminal_properties = "int out;int sign;"
                output_fnc = "/*Begin code section*/
if (in >= 0)
{    
    out = in;
    sign=0;
}

else
{
    out = in*-1;
    sign = 1;
}
/*End code section*/"
            }
            [
                position = 7536, 9032
                hide_name = True
                size = 80, 48
            ]

            component src_constant Constant11 {
                execution_rate = "Ts"
                value = "scale_const"
            }
            [
                position = 7320, 9080
            ]

            component gen_probe Probe1_3 {
            }
            [
                position = 7592, 8952
            ]

            component gen_c_function "C function12" {
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "in inherit"
                in_terminal_labels = "[(\'in\', True)]"
                in_terminal_properties = "int in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit;inherit"
                out_terminal_dimensions_str = "out inherit;sign inherit"
                out_terminal_labels = "[(\'out\', True), (\'sign\', True)]"
                out_terminal_properties = "int out;int sign;"
                output_fnc = "/*Begin code section*/
if (in >= 0)
{    
    out = in;
    sign=0;
}

else
{
    out = in*-1;
    sign = 1;
}
/*End code section*/"
            }
            [
                position = 7536, 9200
                hide_name = True
                size = 80, 48
            ]

            component gen_probe Voltage_diff_3 {
            }
            [
                position = 7544, 9112
            ]

            component src_constant Constant12 {
                execution_rate = "Ts"
                value = "scale_const"
            }
            [
                position = 7320, 9248
            ]

            component gen_product Product12 {
            }
            [
                position = 7424, 9200
            ]

            component gen_product Product13 {
            }
            [
                position = 7424, 9376
            ]

            component gen_c_function "C function13" {
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "in inherit"
                in_terminal_labels = "[(\'in\', True)]"
                in_terminal_properties = "int in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit;inherit"
                out_terminal_dimensions_str = "out inherit;sign inherit"
                out_terminal_labels = "[(\'out\', True), (\'sign\', True)]"
                out_terminal_properties = "int out;int sign;"
                output_fnc = "/*Begin code section*/
if (in >= 0)
{    
    out = in;
    sign=0;
}

else
{
    out = in*-1;
    sign = 1;
}
/*End code section*/"
            }
            [
                position = 7536, 9376
                hide_name = True
                size = 80, 48
            ]

            component src_constant Constant13 {
                execution_rate = "Ts"
                value = "scale_const"
            }
            [
                position = 7320, 9424
            ]

            component gen_probe flow_3 {
            }
            [
                position = 7592, 9296
            ]

            component gen_c_function "C function14" {
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "in inherit"
                in_terminal_labels = "[(\'in\', True)]"
                in_terminal_properties = "int in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit;inherit"
                out_terminal_dimensions_str = "out inherit;sign inherit"
                out_terminal_labels = "[(\'out\', True), (\'sign\', True)]"
                out_terminal_properties = "int out;int sign;"
                output_fnc = "/*Begin code section*/
if (in >= 0)
{    
    out = in;
    sign=0;
}

else
{
    out = in*-1;
    sign = 1;
}
/*End code section*/"
            }
            [
                position = 7536, 9544
                hide_name = True
                size = 80, 48
            ]

            component gen_probe Q_level_3 {
            }
            [
                position = 7544, 9456
            ]

            component src_constant Constant14 {
                execution_rate = "Ts"
                value = "scale_const"
            }
            [
                position = 7320, 9592
            ]

            component gen_product Product14 {
            }
            [
                position = 7424, 9544
            ]

            component gen_product Product15 {
            }
            [
                position = 9024, 8144
            ]

            component gen_probe Probe14 {
            }
            [
                position = 8800, 8192
            ]

            component gen_c_function "C function15" {
                in_terminal_dimensions = "inherit;inherit"
                in_terminal_dimensions_str = "sign inherit;in inherit"
                in_terminal_labels = "[(\'sign\', True), (\'in\', True)]"
                in_terminal_properties = "inherit sign;inherit in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit"
                out_terminal_dimensions_str = "out inherit"
                out_terminal_labels = "[(\'out\', True)]"
                output_fnc = "/*Begin code section*/
out = in*((-2*sign)+1);
/*End code section*/"
            }
            [
                position = 8696, 8088
                hide_name = True
                size = 48, 48
            ]

            component src_constant Constant15 {
                execution_rate = "Ts"
                value = "scale_back_const"
            }
            [
                position = 8904, 8168
            ]

            component gen_c_function "C function16" {
                in_terminal_dimensions = "inherit;inherit"
                in_terminal_dimensions_str = "sign inherit;in inherit"
                in_terminal_labels = "[(\'sign\', True), (\'in\', True)]"
                in_terminal_properties = "inherit sign;inherit in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit"
                out_terminal_dimensions_str = "out inherit"
                out_terminal_labels = "[(\'out\', True)]"
                output_fnc = "/*Begin code section*/
out = in*((-2*sign)+1);
/*End code section*/"
            }
            [
                position = 8696, 8232
                hide_name = True
                size = 48, 48
            ]

            component src_constant Constant16 {
                execution_rate = "Ts"
                value = "scale_back_const"
            }
            [
                position = 8904, 8312
            ]

            component gen_product Product16 {
            }
            [
                position = 9016, 8288
            ]

            component gen_probe Probe15 {
            }
            [
                position = 8792, 8336
            ]

            component gen_product Product17 {
            }
            [
                position = 8936, 8464
            ]

            component gen_probe Probe16 {
            }
            [
                position = 8712, 8512
            ]

            component gen_c_function "C function17" {
                in_terminal_dimensions = "inherit;inherit"
                in_terminal_dimensions_str = "sign inherit;in inherit"
                in_terminal_labels = "[(\'sign\', True), (\'in\', True)]"
                in_terminal_properties = "inherit sign;inherit in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit"
                out_terminal_dimensions_str = "out inherit"
                out_terminal_labels = "[(\'out\', True)]"
                output_fnc = "/*Begin code section*/
out = in*((-2*sign)+1);
/*End code section*/"
            }
            [
                position = 8608, 8408
                hide_name = True
                size = 48, 48
            ]

            component src_constant Constant17 {
                execution_rate = "Ts"
                value = "scale_back_const"
            }
            [
                position = 8816, 8488
            ]

            component gen_c_function "C function18" {
                in_terminal_dimensions = "inherit;inherit"
                in_terminal_dimensions_str = "sign inherit;in inherit"
                in_terminal_labels = "[(\'sign\', True), (\'in\', True)]"
                in_terminal_properties = "inherit sign;inherit in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit"
                out_terminal_dimensions_str = "out inherit"
                out_terminal_labels = "[(\'out\', True)]"
                output_fnc = "/*Begin code section*/
out = in*((-2*sign)+1);
/*End code section*/"
            }
            [
                position = 8608, 8552
                hide_name = True
                size = 48, 48
            ]

            component src_constant Constant18 {
                execution_rate = "Ts"
                value = "scale_back_const"
            }
            [
                position = 8816, 8632
            ]

            component gen_product Product18 {
            }
            [
                position = 8928, 8608
            ]

            component gen_probe Probe17 {
            }
            [
                position = 8704, 8656
            ]

            port U1-P1 {
                position = bottom:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7392, 7584
                rotation = down
                scale = -1, 1
            ]

            port u_P_1 {
                position = top:1
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 9064, 7816
            ]

            port V_dev_1 {
                position = bottom:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7392, 7752
                rotation = down
                scale = -1, 1
            ]

            port u_Q_1 {
                position = top:2
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 9064, 7960
            ]

            port "flow flag_1" {
                position = bottom:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7392, 7928
                rotation = down
                scale = -1, 1
            ]

            port "Q level_1" {
                position = bottom:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7392, 8096
                rotation = down
                scale = -1, 1
            ]

            port U1-P2 {
                position = bottom:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7240, 8288
                rotation = down
                scale = -1, 1
            ]

            port V_dev_2 {
                position = bottom:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7240, 8456
                rotation = down
                scale = -1, 1
            ]

            port "flow flag_2" {
                position = bottom:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7240, 8632
                rotation = down
                scale = -1, 1
            ]

            port "Q level_2" {
                position = bottom:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7240, 8800
                rotation = down
                scale = -1, 1
            ]

            port U1-P3 {
                position = bottom:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7320, 8984
                rotation = down
                scale = -1, 1
            ]

            port V_dev_3 {
                position = bottom:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7320, 9152
                rotation = down
                scale = -1, 1
            ]

            port "flow flag_3" {
                position = bottom:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7320, 9328
                rotation = down
                scale = -1, 1
            ]

            port "Q level_3" {
                position = bottom:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7320, 9496
                rotation = down
                scale = -1, 1
            ]

            port u_P_2 {
                position = top:3
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 9176, 8144
            ]

            port u_Q_2 {
                position = top:4
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 9176, 8288
            ]

            port u_P_3 {
                position = top:5
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 9088, 8464
            ]

            port u_Q_3 {
                position = top:6
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 9088, 8608
            ]

            junction Junction5 sp
            [
                position = 8632, 7760
            ]

            junction Junction4 sp
            [
                position = 7552, 7632
            ]

            junction Junction6 sp
            [
                position = 7552, 7800
            ]

            junction Junction7 sp
            [
                position = 8632, 7904
            ]

            junction Junction8 sp
            [
                position = 7552, 7976
            ]

            junction Junction9 sp
            [
                position = 7552, 8144
            ]

            junction Junction10 sp
            [
                position = 7400, 8336
            ]

            junction Junction11 sp
            [
                position = 7400, 8504
            ]

            junction Junction12 sp
            [
                position = 7400, 8680
            ]

            junction Junction13 sp
            [
                position = 7400, 8848
            ]

            junction Junction14 sp
            [
                position = 7480, 9032
            ]

            junction Junction15 sp
            [
                position = 7480, 9200
            ]

            junction Junction16 sp
            [
                position = 7480, 9376
            ]

            junction Junction17 sp
            [
                position = 7480, 9544
            ]

            junction Junction18 sp
            [
                position = 8744, 8088
            ]

            junction Junction19 sp
            [
                position = 8744, 8232
            ]

            junction Junction20 sp
            [
                position = 8656, 8408
            ]

            junction Junction21 sp
            [
                position = 8656, 8552
            ]

            connect "ModBus Device2 (config1).coil_in" C_u11.out as Connection139
            connect Junction4 Product1.out as Connection115
            connect Constant1.out Product1.in1 as Connection73
            connect C_u12.out "ModBus Device2 (config1).discrete_in" as Connection121
            [
                breakpoints = 8000, 7968; 8080, 7968
            ]
            connect Termination1.in "ModBus Device2 (config1).coil_out" as Connection127
            connect Constant2.out Product2.in1 as Connection100
            connect Product2.out u_P_1 as Connection96
            connect "C function2.out" Junction5 as Connection135
            connect Probe1_1.in Junction4 as Connection116
            connect Junction5 Product2.in as Connection136
            connect U1-P1 Product1.in as Connection83
            connect "C function1.in" Junction4 as Connection114
            connect Probe2.in Junction5 as Connection137
            connect C_u13.out "ModBus Device2 (config1).holding_in" as Connection120
            [
                breakpoints = 7952, 8016; 8080, 8016
            ]
            connect "ModBus Device2 (config1).holding_out" "Bus Split1.in" as Connection131
            connect V_dev_1 Product3.in as Connection140
            connect Constant3.out Product3.in1 as Connection141
            connect "C function3.in" Junction6 as Connection142
            connect Voltage_diff_1.in Junction6 as Connection143
            connect Junction6 Product3.out as Connection144
            connect "Bus Join2.out" "ModBus Device2 (config1).reg_in" as Connection149
            connect "C function4.out" Junction7 as Connection150
            connect Constant4.out Product4.in1 as Connection151
            connect Junction7 Product4.in as Connection152
            connect Probe3.in Junction7 as Connection153
            connect Product4.out u_Q_1 as Connection154
            connect Junction8 Product5.out as Connection157
            connect Constant5.out Product5.in1 as Connection158
            connect flow_1.in Junction8 as Connection159
            connect "flow flag_1" Product5.in as Connection160
            connect "C function5.in" Junction8 as Connection161
            connect "Q level_1" Product6.in as Connection162
            connect Constant6.out Product6.in1 as Connection163
            connect "C function6.in" Junction9 as Connection164
            connect Q_level_1.in Junction9 as Connection165
            connect Junction9 Product6.out as Connection166
            connect "C function1.out" "Bus Join2.in" as Connection167
            [
                breakpoints = 7888, 7672; 7888, 7776
            ]
            connect "Bus Join2.in1" "C function1.sign" as Connection168
            [
                breakpoints = 7888, 8272; 7888, 7688
            ]
            connect "C function3.out" "Bus Join2.in2" as Connection169
            [
                breakpoints = 7872, 7840; 7872, 8288
            ]
            connect "C function3.sign" "Bus Join2.in3" as Connection170
            [
                breakpoints = 7872, 7856; 7872, 8304
            ]
            connect "C function5.out" "Bus Join2.in4" as Connection171
            [
                breakpoints = 7856, 8016; 7856, 8320
            ]
            connect "C function5.sign" "Bus Join2.in5" as Connection172
            [
                breakpoints = 7856, 8032; 7856, 8336
            ]
            connect "Bus Join2.in6" "C function6.out" as Connection173
            [
                breakpoints = 7840, 8352; 7840, 8184
            ]
            connect "C function6.sign" "Bus Join2.in7" as Connection174
            [
                breakpoints = 7840, 8200; 7840, 8368
            ]
            connect Junction10 Product7.out as Connection175
            connect Constant7.out Product7.in1 as Connection176
            connect Probe1_2.in Junction10 as Connection177
            connect U1-P2 Product7.in as Connection178
            connect "C function7.in" Junction10 as Connection179
            connect V_dev_2 Product8.in as Connection180
            connect Constant8.out Product8.in1 as Connection181
            connect "C function8.in" Junction11 as Connection182
            connect Voltage_diff_2.in Junction11 as Connection183
            connect Junction11 Product8.out as Connection184
            connect Junction12 Product9.out as Connection185
            connect Constant9.out Product9.in1 as Connection186
            connect flow_2.in Junction12 as Connection187
            connect "flow flag_2" Product9.in as Connection188
            connect "C function9.in" Junction12 as Connection189
            connect "Q level_2" Product10.in as Connection190
            connect Constant10.out Product10.in1 as Connection191
            connect "C function10.in" Junction13 as Connection192
            connect Q_level_2.in Junction13 as Connection193
            connect Junction13 Product10.out as Connection194
            connect Junction14 Product11.out as Connection195
            connect Constant11.out Product11.in1 as Connection196
            connect Probe1_3.in Junction14 as Connection197
            connect U1-P3 Product11.in as Connection198
            connect "C function11.in" Junction14 as Connection199
            connect V_dev_3 Product12.in as Connection200
            connect Constant12.out Product12.in1 as Connection201
            connect "C function12.in" Junction15 as Connection202
            connect Voltage_diff_3.in Junction15 as Connection203
            connect Junction15 Product12.out as Connection204
            connect Junction16 Product13.out as Connection205
            connect Constant13.out Product13.in1 as Connection206
            connect flow_3.in Junction16 as Connection207
            connect "flow flag_3" Product13.in as Connection208
            connect "C function13.in" Junction16 as Connection209
            connect "Q level_3" Product14.in as Connection210
            connect Constant14.out Product14.in1 as Connection211
            connect "C function14.in" Junction17 as Connection212
            connect Q_level_3.in Junction17 as Connection213
            connect Junction17 Product14.out as Connection214
            connect "C function7.out" "Bus Join2.in8" as Connection215
            [
                breakpoints = 7816, 8328; 7816, 8576
            ]
            connect "C function7.sign" "Bus Join2.in9" as Connection216
            [
                breakpoints = 7816, 8344; 7816, 8592
            ]
            connect "C function8.out" "Bus Join2.in10" as Connection217
            [
                breakpoints = 7800, 8496; 7800, 8608
            ]
            connect "Bus Join2.in11" "C function8.sign" as Connection218
            [
                breakpoints = 7800, 8624; 7800, 8512
            ]
            connect "C function9.out" "Bus Join2.in12" as Connection219
            [
                breakpoints = 7800, 8672; 7800, 8640
            ]
            connect "C function9.sign" "Bus Join2.in13" as Connection220
            [
                breakpoints = 7800, 8688; 7800, 8656
            ]
            connect "Bus Join2.in14" "C function10.out" as Connection221
            [
                breakpoints = 7992, 8672; 7816, 8672; 7816, 8840
            ]
            connect "C function10.sign" "Bus Join2.in15" as Connection222
            [
                breakpoints = 7816, 8856; 7816, 8688
            ]
            connect "Bus Join2.in16" "C function11.out" as Connection223
            [
                breakpoints = 7832, 8704; 7832, 9024
            ]
            connect "C function11.sign" "Bus Join2.in17" as Connection224
            [
                breakpoints = 7832, 9040; 7832, 8720
            ]
            connect "Bus Join2.in18" "C function12.out" as Connection225
            [
                breakpoints = 7880, 8736; 7880, 9192
            ]
            connect "C function12.sign" "Bus Join2.in19" as Connection226
            [
                breakpoints = 7880, 9208; 7880, 8752
            ]
            connect "Bus Join2.in20" "C function13.out" as Connection227
            [
                breakpoints = 7928, 8768; 7928, 9368
            ]
            connect "C function13.sign" "Bus Join2.in21" as Connection228
            [
                breakpoints = 7928, 9384; 7928, 8784
            ]
            connect "Bus Join2.in22" "C function14.out" as Connection229
            [
                breakpoints = 7984, 8800; 7984, 9536
            ]
            connect "C function14.sign" "Bus Join2.in23" as Connection230
            [
                breakpoints = 7984, 9552; 7984, 8816
            ]
            connect Constant15.out Product15.in1 as Connection231
            connect Product15.out u_P_2 as Connection232
            connect "C function15.out" Junction18 as Connection233
            connect Junction18 Product15.in as Connection234
            connect Probe14.in Junction18 as Connection235
            connect "C function16.out" Junction19 as Connection236
            connect Constant16.out Product16.in1 as Connection237
            connect Junction19 Product16.in as Connection238
            connect Probe15.in Junction19 as Connection239
            connect Product16.out u_Q_2 as Connection240
            connect Constant17.out Product17.in1 as Connection241
            connect Product17.out u_P_3 as Connection242
            connect "C function17.out" Junction20 as Connection243
            connect Junction20 Product17.in as Connection244
            connect Probe16.in Junction20 as Connection245
            connect "C function18.out" Junction21 as Connection246
            connect Constant18.out Product18.in1 as Connection247
            connect Junction21 Product18.in as Connection248
            connect Probe17.in Junction21 as Connection249
            connect Product18.out u_Q_3 as Connection250
            connect "Bus Split1.out" "C function2.sign" as Connection251
            [
                breakpoints = 8440, 8072; 8440, 7752
            ]
            connect "C function2.in" "Bus Split1.out1" as Connection252
            [
                breakpoints = 8456, 7768; 8456, 8088
            ]
            connect "C function4.sign" "Bus Split1.out2" as Connection253
            [
                breakpoints = 8472, 7896; 8472, 8104
            ]
            connect "Bus Split1.out3" "C function4.in" as Connection254
            [
                breakpoints = 8488, 8120; 8488, 7912
            ]
            connect "Bus Split1.out4" "C function15.sign" as Connection255
            [
                breakpoints = 8512, 8136; 8512, 8080
            ]
            connect "C function15.in" "Bus Split1.out5" as Connection256
            [
                breakpoints = 8528, 8096; 8528, 8152
            ]
            connect "Bus Split1.out6" "C function16.sign" as Connection257
            connect "C function16.in" "Bus Split1.out7" as Connection258
            [
                breakpoints = 8640, 8240; 8640, 8184
            ]
            connect "C function17.sign" "Bus Split1.out8" as Connection259
            [
                breakpoints = 8552, 8400; 8552, 8200
            ]
            connect "Bus Split1.out9" "C function17.in" as Connection260
            [
                breakpoints = 8536, 8216; 8536, 8416
            ]
            connect "Bus Split1.out10" "C function18.sign" as Connection261
            [
                breakpoints = 8472, 8232; 8472, 8544
            ]
            connect "C function18.in" "Bus Split1.out11" as Connection262
            [
                breakpoints = 8456, 8560; 8456, 8248
            ]
        }
        [
            position = 10304, 8640
            rotation = left
            scale = 1, -1
            size = 856, 264
        ]

        connect u_Q1.in Modbus1.u_Q_1 as Connection1
        connect Modbus1.u_P_1 u_P1.in as Connection2
        connect u_Q2.in Modbus1.u_Q_2 as Connection3
        connect u_P2.in Modbus1.u_P_2 as Connection4
        connect u_Q3.in Modbus1.u_Q_3 as Connection5
        connect u_P3.in Modbus1.u_P_3 as Connection6
        connect volt_error1.out Modbus1.V_dev_1 as Connection7
        [
            breakpoints = 10488, 8224; 10488, 8528
        ]
        connect q_level1.out "Modbus1.Q level_1" as Connection8
        [
            breakpoints = 10488, 8416; 10488, 8608
        ]
        connect flow_flag1.out "Modbus1.flow flag_1" as Connection9
        [
            breakpoints = 10488, 8352; 10488, 8960
        ]
        connect freq_error1.out Modbus1.U1-P1 as Connection10
        [
            breakpoints = 10488, 8288; 10488, 8896
        ]
        connect freq_error2.out Modbus1.U1-P2 as Connection11
        [
            breakpoints = 10520, 8560; 10520, 9040
        ]
        connect volt_error2.out Modbus1.V_dev_2 as Connection12
        [
            breakpoints = 10520, 8616; 10520, 8464
        ]
        connect flow_flag2.out "Modbus1.flow flag_2" as Connection13
        [
            breakpoints = 10520, 8672; 10520, 8752
        ]
        connect q_level2.out "Modbus1.Q level_2" as Connection14
        [
            breakpoints = 10520, 8720; 10520, 8320
        ]
        connect volt_error3.out Modbus1.V_dev_3 as Connection15
        [
            breakpoints = 10600, 8888; 10600, 8240
        ]
        connect freq_error3.out Modbus1.U1-P3 as Connection16
        [
            breakpoints = 10600, 8832; 10600, 8856; 10608, 8856; 10600, 8856; 10600, 8816
        ]
        connect flow_flag3.out "Modbus1.flow flag_3" as Connection17
        [
            breakpoints = 10600, 8952; 10600, 8672
        ]
        connect q_level3.out "Modbus1.Q level_3" as Connection18
        [
            breakpoints = 10600, 9016; 10600, 8384
        ]
    }

    default {
        gen_bus_join {
            inputs = "2"
            execution_rate = "inherit"
        }

        gen_bus_split {
            outputs = "2"
            execution_rate = "inherit"
        }

        gen_c_function {
            in_terminal_properties = "real in;"
            in_terminal_labels = ""
            out_terminal_properties = "real out;"
            out_terminal_labels = ""
            no_feed_inputs = ""
            no_feed_outputs = ""
            in_terminal_dimensions = ""
            in_terminal_dimensions_str = ""
            out_terminal_dimensions = ""
            out_terminal_dimensions_str = ""
            output_fnc = ""
            update_fnc = ""
            init_fnc = ""
            global_variables = ""
            parameters = ""
            execution_rate = "inherit"
        }

        gen_probe {
            addr = "0"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "generic"
            streaming_en = "False"
            streaming_er_idx = "0"
            execution_rate = "inherit"
        }

        gen_product {
            signs = "2"
            execution_rate = "inherit"
        }

        gen_terminator {
            execution_rate = "inherit"
        }

        src_constant {
            value = "1"
            signal_type = "real"
            execution_rate = "100e-6"
        }

        src_scada_input {
            addr = "0"
            format = "real"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "real"
            min = "-1e6"
            max = "1e6"
            def_value = "0"
            unit = " "
            execution_rate = "100e-6"
        }

        "core/ModBus Device" {
            hil_id = "0"
            configuration = "config1"
            preview = "Configuration preview"
            ip_address_port = "False"
            request_counter_port = "None"
            network_settings_src = "Configuration dictionary"
            ip_addr = "192.168.0.210"
            netmask = "255.255.255.0"
            port = "502"
            gateway = "192.168.0.210"
            gateway_enable = "False"
            defines = ""
            modbus_sunspec = "False"
            logging = "False"
            execution_rate = "100e-6"
        }
    }

    CODE model_init
        # Numpy module is imported as 'np'
        # Scipy module is imported as 'sp'
        Ts = 100e-6
        
        #scaling constants to handle floating point values
        scale_const=1e4
        scale_back_const=1e-4
        
        #Modbus configuration
        config1 = {
                                            'port': 502,
                                            'ip_addr': '192.168.2.69',
                                            'netmask': '255.255.255.0',
                                            'slave_id': 17,
                                            'coil_input_addresses': '',
                                            'coil_output_addresses': '',
                                            'discrete_input_addresses': '',
                                            'holding_register_input_addresses': '',
                                            'holding_register_output_addresses': '0,1,2,3,4,5,6,7,8,9,10,11',
                                            'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23'
        }
        
        config2 = {
                                            'port': 502,
                                            'ip_addr': '192.168.2.70',
                                            'netmask': '255.255.255.0',
                                            'slave_id': 18,
                                            'coil_input_addresses': '',
                                            'coil_output_addresses': '',
                                            'discrete_input_addresses': '',
                                            'holding_register_input_addresses': '',
                                            'holding_register_output_addresses': '0,1,2,3',
                                            'input_register_adresses': '0,1,2,3,4,5,6,7'
        }
        
        config3 = {
                                            'port': 502,
                                            'ip_addr': '192.168.2.71',
                                            'netmask': '255.255.255.0',
                                            'slave_id': 19,
                                            'coil_input_addresses': '',
                                            'coil_output_addresses': '',
                                            'discrete_input_addresses': '',
                                            'holding_register_input_addresses': '',
                                            'holding_register_output_addresses': '0,1,2,3',
                                            'input_register_adresses': '0,1,2,3,4,5,6,7'
        }
    ENDCODE
}
